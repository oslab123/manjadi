Consider the following schema for OrderDatabase:	
SALESMAN (Salesman_id, Name, City, Commission)
CUSTOMER (Customer_id, Cust_Name, City, Grade,Salesman_id)
ORDERS (Ord_No, Purchase_Amt, Ord_Date, Customer_id, Salesman_id) 
Write SQL queries to
1. Count the customers with grades above Bangalore’saverage.
2. Find the name and numbers of all salesmen who had more than onecustomer.
3. List all salesmen and indicate those who have and don’t have customers in their cities.
4. Create a view that finds the salesman who has the customer with the highest order of a day.

Write a procedure to store Customer name , City and Grade.

------------------------------------------------------------
SELECT COUNT(*) AS AboveAverageCustomers
FROM CUSTOMER
WHERE Grade > (SELECT AVG(Grade) FROM CUSTOMER WHERE City = 'Bangalore');


=======================


SELECT Salesman_id, Name, COUNT(Customer_id) AS CustomerCount
FROM SALESMAN
JOIN CUSTOMER ON SALESMAN.Salesman_id = CUSTOMER.Salesman_id
GROUP BY Salesman_id, Name
HAVING COUNT(Customer_id) > 1;


========================

SELECT S.Salesman_id, S.Name, S.City,
       CASE WHEN C.Customer_id IS NOT NULL THEN 'Has Customers'
            ELSE 'No Customers'
       END AS CustomerStatus
FROM SALESMAN S
LEFT JOIN CUSTOMER C ON S.Salesman_id = C.Salesman_id AND S.City = C.City;


===================


CREATE VIEW MaxOrderSalesman AS
SELECT O.Salesman_id, S.Name
FROM ORDERS O
JOIN SALESMAN S ON O.Salesman_id = S.Salesman_id
WHERE (O.Ord_Date, O.Purchase_Amt) = (
    SELECT Ord_Date, MAX(Purchase_Amt)
    FROM ORDERS
    GROUP BY Ord_Date
);

===================



CREATE PROCEDURE InsertCustomerDetails (
    IN pCustName VARCHAR(255),
    IN pCity VARCHAR(255),
    IN pGrade INT
)
BEGIN
    INSERT INTO CUSTOMER (Cust_Name, City, Grade)
    VALUES (pCustName, pCity, pGrade);
END;


=============

 CALL InsertCustomerDetails('John Doe', 'New York', 3);




